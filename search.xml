<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>typora使用手册</title>
    <url>/2019/12/05/typora%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">快捷键</th>
<th style="text-align:center">作用</th>
<th style="text-align:center">快捷键</th>
<th style="text-align:center">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Ctrl+1</td>
<td style="text-align:center">一阶标题</td>
<td style="text-align:center">Ctrl+B</td>
<td style="text-align:center">字体加粗</td>
</tr>
<tr>
<td style="text-align:center">Ctrl+2</td>
<td style="text-align:center">二阶标题</td>
<td style="text-align:center">Ctrl+I</td>
<td style="text-align:center">字体倾斜</td>
</tr>
<tr>
<td style="text-align:center">Ctrl+3</td>
<td style="text-align:center">三阶标题</td>
<td style="text-align:center">Ctrl+U</td>
<td style="text-align:center">下划线</td>
</tr>
<tr>
<td style="text-align:center">Ctrl+4</td>
<td style="text-align:center">四阶标题</td>
<td style="text-align:center">Ctrl+Home</td>
<td style="text-align:center">返回Typora顶部</td>
</tr>
<tr>
<td style="text-align:center">Ctrl+5</td>
<td style="text-align:center">五阶标题</td>
<td style="text-align:center">Ctrl+End</td>
<td style="text-align:center">返回Typora底部</td>
</tr>
<tr>
<td style="text-align:center">Ctrl+6</td>
<td style="text-align:center">六阶标题</td>
<td style="text-align:center">Ctrl+T</td>
<td style="text-align:center">创建表格</td>
</tr>
<tr>
<td style="text-align:center">Ctrl+L</td>
<td style="text-align:center">选中某句话</td>
<td style="text-align:center">Ctrl+K</td>
<td style="text-align:center">创建超链接</td>
</tr>
<tr>
<td style="text-align:center">Ctrl+D</td>
<td style="text-align:center">选中某个单词</td>
<td style="text-align:center">Ctrl+F</td>
<td style="text-align:center">搜索</td>
</tr>
<tr>
<td style="text-align:center">Ctrl+E</td>
<td style="text-align:center">选中相同格式的文字</td>
<td style="text-align:center">Ctrl+H</td>
<td style="text-align:center">搜索并替换</td>
</tr>
<tr>
<td style="text-align:center">Alt+Shift+5</td>
<td style="text-align:center">删除线</td>
<td style="text-align:center">Ctrl+Shift+I</td>
<td style="text-align:center">插入图片</td>
</tr>
</tbody>
</table>
</div>
]]></content>
  </entry>
  <entry>
    <title>leetcode</title>
    <url>/2019/11/30/leetcode/</url>
    <content><![CDATA[<p>title: leetCode</p>
<p>Num 113:路径总和</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">*题目描述：给定一个二叉树和一个目标和，找到所有从根节点到叶子节点路径总和等于给定目标和的路径。</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">**/</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    List&lt;List&lt;Integer&gt;&gt; ans_path = <span class="keyword">new</span> ArrayList&lt;&gt;();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    List&lt;Integer&gt; node_path = <span class="keyword">new</span> ArrayList&lt;&gt;();       </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; pathSum(TreeNode root, <span class="keyword">int</span> sum) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        path_sum(root,sum);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> ans_path;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">//整体思路：回溯,先序遍历思想，根左右</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">path_sum</span><span class="params">(TreeNode root,<span class="keyword">int</span> sum)</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(root==<span class="keyword">null</span>)<span class="comment">//空结点直接处理</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">return</span> ;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        node_path.add(root.val);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(root.left==<span class="keyword">null</span>&amp;&amp;root.right==<span class="keyword">null</span>)&#123;<span class="comment">//叶子节点</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span>(sum==root.val)&#123;<span class="comment">//当前值等于路径值</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">                ans_path.add(<span class="keyword">new</span> ArrayList&lt;&gt;(node_path));</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        sum-=root.val;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(root.left!=<span class="keyword">null</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            path_sum(root.left,sum);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(root.right!=<span class="keyword">null</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">             path_sum(root.right,sum);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        node_path.remove(node_path.size()-<span class="number">1</span>);<span class="comment">//回溯</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>Num148:链表排序</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">*题目描述：在 O(n log n) 时间复杂度和常数级空间复杂度下，对链表进行排序</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">*输入: 4-&gt;2-&gt;1-&gt;3</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">*输出: 1-&gt;2-&gt;3-&gt;4</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">**/</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">//归并排序思想</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">sortList</span><span class="params">(ListNode head)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>)<span class="comment">//递归出口，只有一个节点或者没有节点</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">return</span> head;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        ListNode mid_node = get_mid_node(head);<span class="comment">//得到中间节点</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        ListNode right_head = mid_node.next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        mid_node.next = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> merge_List(sortList(head), sortList(right_head));</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">get_mid_node</span><span class="params">(ListNode head)</span> </span>&#123;<span class="comment">//找链表的中间节点，快慢指针法</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">return</span> head;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        ListNode low_node = head, fast_node = head;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">while</span> (fast_node.next != <span class="keyword">null</span> &amp;&amp; fast_node.next.next != <span class="keyword">null</span>) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            low_node = low_node.next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            fast_node = fast_node.next.next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> low_node;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">merge_List</span><span class="params">(ListNode p, ListNode q)</span> </span>&#123;<span class="comment">//合并p,q两个有序链表</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        ListNode cur_p = p, cur_q = q, head;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (p.val &lt; q.val) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            head = p;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            cur_p = cur_p.next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125; <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            head = q;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            cur_q = cur_q.next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        ListNode cur = head;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">while</span> (cur_q != <span class="keyword">null</span> &amp;&amp; cur_p != <span class="keyword">null</span>) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (cur_q.val &lt; cur_p.val) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                cur.next = cur_q;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                cur_q = cur_q.next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                cur = cur.next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125; <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                cur.next = cur_p;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                cur_p = cur_p.next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                cur = cur.next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (cur_p != <span class="keyword">null</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            cur.next = cur_p;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (cur_q != <span class="keyword">null</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            cur.next = cur_q;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> head;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/11/30/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
